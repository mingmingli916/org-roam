:PROPERTIES:
:ID:       97F44F5C-9F78-410A-B464-426C31CAE9E7
:END:
#+title: Function Type

Lisp functions are executable code. Functions are also Lisp objects. A
non-compiled function is a lambda expression: that is, a list whose
first element is the symbol =lambda=.

In Lisp, a function has no intrinsic name. A lambda expression can be
called as a function even though it has no name; to emphasize this, we
also call it an *anonymous function*. A named function in Lisp is just a
symbol with a valid function in its function cell.

Most of the time, functions are called when their names are written in
Lisp expressions in Lisp programs. However, you can construct or obtain
a function object at run time and then call it with the primitive
functions =funcall= and =apply=.


