:PROPERTIES:
:ID:       155D1212-1860-4655-B26F-ED6AF5276176
:END:
#+title: Org Table

* Built-in Table Editor

Org makes it easy to format tables in plain ASCII.
Any line with ‘|’ as the first non-whitespace character is considered part of a table.
‘|’ is also the column separator.
Moreover, a line starting with ‘|-’ is a horizontal rule.
It separates rows explicitly.
Rows before the first horizontal rule are header lines.

A table might look like this:
#+begin_src
| *Binding*   | *Meaning*                         |
|-------------+-----------------------------------|
| *C-c C-n*   | Next heading                      |
| *C-c C-p*   | Previous heading                  |
#+end_src




** Create and Conversion
*C-c |* converts the active region to table.
If every line contains at least one TAB character, the function assumes that the material is tab separated.
If every line contains a comma, comma-separated values (CSV) are assumed.
If not, lines are split at whitespace into fields.
You can use a prefix argument to force a specific separator: C-u forces CSV, C-u C-u forces TAB, C-u C-u C-u prompts for a regular expression to match the separator, and a numeric argument N indicates that at least N consecutive spaces, or alternatively a TAB will be the separator.
If there is no active region, this command creates an empty Org table.

** Re-aligning and Field Motion
- *C-c C-c* :: Re-align the table without moving point.
- *TAB* :: Re-align the table, move to the next field. Creates a new row if necessary.
- *S-TAB* :: Re-align, move to previous field.
- *RET* :: Re-align the table and move down to next row. Creates a new row if necessary.
- *M-a* :: Move to beginning of the current table field, or on to the previous field.
- *M-e* :: Move to end of the current table field, or on to the next field.



** Column and Row Editing
- *M-\leftarrow* :: Move the current column left.
- *M\rightarrow* :: Move the current column right.
- *M-S-\leftarrow* :: Kill the current column.
- *M-S-\rightarrow* :: Insert a new column at point position. Move the recent column and all cells to the right of this column to the right.
- *M-\uparrow* :: Move the current row up.
- *M-\downarrow* :: Move the current row down.
- *M-S-\uparrow* :: Kill the current row or horizontal line.
- *M-S-\downarrow* :: Insert a new row above the current row. With a prefix argument, the line is created below the current one.
- *S-\uparrow* :: Move cell up by swapping with adjacent cell.
- *S-\downarrow* :: Move cell down by swapping with adjacent cell.
- *S-\leftarrow* :: Move cell left by swapping with adjacent cell.
- *S-\rightarrow* :: Move cell right by swapping with adjacent cell.
- *C-c -* :: Insert a horizontal line below current row. With a prefix argument, the line is created above the current line.
- *C-c RET* :: Insert a horizontal line below current row, and move point into the row below that line.
- *C-c ^* :: Sort the table lines in the region.
   The position of point indicates the column to be used for sorting, and the range of lines is the range between the nearest horizontal separator lines, or the entire table.
    If point is before the first column, you are prompted for the sorting column.
     If there is an active region, the mark specifies the first line and the sorting column, while point should be in the last line to be included into the sorting.
      The command prompts for the sorting type, alphabetically, numerically, or by time.
       You can sort in normal or reverse order.
        You can also supply your own key extraction and comparison functions.
         When called with a prefix argument, alphabetic sorting is case-sensitive.
- *C-c `* :: Edit the current field in a separate window.
   This is useful for fields that are not fully visible.
    When called with a C-u prefix, just make the full field visible, so that it can be edited in place.
     When called with C-u C-u prefixes, make the editor window follow point through the table and always show the current field.
      The follow mode exits automatically when point leaves the table, or when you repeat this command with C-u C-u C-c `.



** Regions
- *C-c C-x M-w* :: Copy a rectangular region from a table to a special clipboard.
   Point and mark determine edge fields of the rectangle.
    If there is no active region, copy just the current field.
     The process ignores horizontal separator lines.
- *C-c C-x C-w* :: Copy a rectangular region from a table to a special clipboard, and blank all fields in the rectangle.
- *C-c C-x C-y* :: Paste a rectangular region into a table.
   The upper left corner ends up in the current field.
    All involved fields are overwritten.
     If the rectangle does not fit into the present table, the table is enlarged as needed.
      The process ignores horizontal separator lines.
- *M-RET* :: Split the current field at point position and move the rest to the line below.
   If there is an active region, and both point and mark are in the same column, the text in the column is wrapped to minimum width for the given number of lines.
    A numeric prefix argument may be used to change the number of desired lines.
     If there is no region, but you specify a prefix argument, the current field is made blank, and the content is appended to the field above.

** Calculations
- *C-c +* :: Sum the numbers in the current column, or in the rectangle defined by the active region.
   The result is shown in the echo area and can be inserted with C-y.
- *S-RET* :: When current field is empty, copy from first non-empty field above.
   When not empty, copy current field down to next row and move point along with it.\\
Depending on the variable =org-table-copy-increment=, integer and time stamp field values, and fields prefixed or suffixed with a whole number, can be incremented during copy.
Also, a 0 prefix argument temporarily disables the increment.



     






