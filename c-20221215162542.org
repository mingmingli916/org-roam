:PROPERTIES:
:ID:       89270883-ED8A-45FC-B640-D4C3211F8596
:END:
#+title: C

C was developed from the beginning as the system programming languages for Unix. 

Why C is successive?
- C was closely tied with Unix operating system. (popular base)
- C is small, simple langauge. (simple to learn)
- C is designed for a pratical purpose.



* Tour of hello.c

1. Here's the hello.c.
#+begin_src C
  #include <stdio.h>

  int main()
  {
    printf("hello, world\n");
    return 0;
  }
#+end_src
This is the high-level C program because it can be read and understood by human beings in that form.



2. In order to run =hello.c= on the system, the individual C statements must be translated by other programs into a sequence of low-level *machine-language* instructions.
3. These instructions are then packaged in a form called an *executable object program* and stored as a binary disk file. (Object programs are also referred to as *executable object files*.)




** gcc
On a Unix system, the translation from source file to object file is performed by a compiler driver:
#+begin_src shell
  gcc -o hello hello.c
#+end_src

Here, the GCC compiler driver reads the source file =hello.c= and translates it into an executable object file =hello=. 

[[file:~/note/org-roam/images/gcc.png]]


3. [@3] As we type the character ./hello at the keyboard in shell, the shell program reads each one into a register and then stores it in memory.
   When we hit the "enter" key on the keyboard, the shell knows that we have finished typing the command.
   The shell then loads the executable =hello= file by executing a sequence of instructions that copies the code and data in the =hello object= from disk to main memory. 

   [[file:~/note/org-roam/images/read-the-hello.png]]

4. Using a technique known as direct memory access (DMA), the data travel directly from disk to main memory, without passing through the processor.

   [[file:~/note/org-roam/images/loading-from-disk-to-memory.png]]

5. Once the code and data in the hello object file are loaded into memory, the processor begins executing the machine-language instructions in the hello program's main routine.
    These instructions copy the bytes in the "hello world\n" string from memory to the register file, and from there to the display device, where they are displayed on the screen.

    [[file:~/note/org-roam/images/write-to-display.png]]




