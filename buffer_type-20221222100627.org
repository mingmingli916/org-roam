:PROPERTIES:
:ID:       295F646C-37EE-4F97-992B-C0D30C594F81
:END:
#+title: Buffer Type

A *buffer* is an object that holds text that can be edited. Most buffers
hold the contents of a disk file so they can be edited, but some are
used for other purposes (like *scratch* buffer). Most buffers are also
meant to be seen by the user, and therefore displayed, at some time, in
a window. But a buffer need not be displayed in any window. Each buffer
has a designated position called point; most editing commands act on the
contents of the current buffer in the neighborhood of point. At any
time, one buffer is the *current buffer*.

Many of the standard Emacs functions manipulate or test the characters
in the current buffer. Several other data structures are associated with
each buffer:

- a local syntax table

- a local keymap

- a list of buffer-local variable bindings

- overlays

- text properties for the text in the buffer

The local keymap and variable list contain entries that individually
override global bindings or values. These are used to customize the
behavior of programs in different buffers, without actually changing the
programs.

Buffers have no read syntax. They print in hash notation, showing the
buffer name.

#+begin_example
(current-buffer)                        ; #<buffer *scratch*>
#+end_example

A *marker* denotes a position in a specific buffer. Markers therefore
have two components: one for the buffer, and one for the position.
Changes in the buffer's text automatically relocate the position value
as necessary to ensure that the marker always points between the same
two characters in the buffer.

Markers have no read syntax. They print in hash notation, giving the
current character position and the name of the buffer.

#+begin_example
(point-marker)                          ; #<marker at 3035 in *scratch*>
#+end_example


